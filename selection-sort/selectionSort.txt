What is Selection Sort?
  Selection sort is a sorting algorithm that selects the smallest element from an unsorted list in each iteration and places that element at the beginning of the unsorted list.


We have an array of elements.
Like:
  [4, 2, 6, 5, 1, 3]


          |   
          |   |
  |       |   |
  |       |   |       |
  |   |   |   |       |
  |   |   |   |   |   |
  4   2   6   5   1   3


In selection sort we need to keep track of indexes, so i added the indexes for the array elements.
Like:

          |   
          |   |
  |       |   |
  |       |   |       |
  |   |   |   |       |
  |   |   |   |   |   |
  4   2   6   5   1   3
  0   1   2   3   4   5


We will select the first item, and we have a variable called min, and we will store the index of the first item in this variable. Now we will start comparing that item with everything else in the array.
Like:
  let min = 0


Compare the first item with second item (4, 2), here the second item is less than the first item so we will change the index of min variable to this second less value index.
Like:
  min = 1

We will do the same steps for the whole array to find the min item in the array, once we found the min value we will swap that item to the first item.

When we swap the item, the first item will be sorted, now we will move to the next item.

We will repeat the same steps for each item in the array until the array is sorted.


-- Selection Sort Function:
We have a function called 'selectionSort()'. Create a variable called min.
Like:
  function selectionSort(array) {
    let min = 0
  }


We will use the for loop to loop over the array, and we will set the loop equal to array's lenght with subtraction of 1, mean with 6 items lenght array we need to 5 steps to sort the array so we will decrease with one from the total length of the array. Inside the first loop we will set the first item equal to min.
Like:
  for (let i = 0; i < array.length - 1; i++) {
    min = i
  }


As we selected the first item in the first loop, so in the inner loop we need to start from the second item, and we will iterate our the full array.
Like:
  for (let i = 0; i < array.length - 1; i++) {
    min = i
    for (let j = i + 1; j < array.length; j++)
  }


Now we will check the selected items, first and second, if the second item is the less than the first item we will change the min variable index to that j item, and than we will keep comparing items until we found the smallest value in the array.
Like:
  for (let i = 0; i < array.length - 1; i++) {
    min = i
    for (let j = i + 1; j < array.length; j++) {
      if (array[j] < array[min]) min = j
    }
    let temp = array[i]
    array[i] = array[min]
    array[min] = temp
  }

Once we found the smallest value in the array we will swap that with the first item, and will repeat the same steps for each item, but not for sorted items.
Like:
  let temp = array[i]
  array[i] = array[min]
  array[min] = temp


Sometime it might possible we get an item that is already in the correct position than we don't want to swap the items, so we only want to run the swaping code if the item is not in the sorted form. When i and min are not equal.
Like:
  if (i !== min) {
    let temp = array[i]
    array[i] = array[min]
    array[min] = temp
  }

At the end return the array.